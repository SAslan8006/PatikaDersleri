import { createHash } from '@apollo/utils.createhash';
export function determineApolloConfig(input) {
    const apolloConfig = {};
    const { APOLLO_KEY, APOLLO_GRAPH_REF, APOLLO_GRAPH_ID, APOLLO_GRAPH_VARIANT, } = process.env;
    if (input?.key) {
        apolloConfig.key = input.key;
    }
    else if (APOLLO_KEY) {
        apolloConfig.key = APOLLO_KEY;
    }
    if (apolloConfig.key) {
        apolloConfig.keyHash = createHash('sha512')
            .update(apolloConfig.key)
            .digest('hex');
    }
    if (input?.graphRef) {
        apolloConfig.graphRef = input.graphRef;
    }
    else if (APOLLO_GRAPH_REF) {
        apolloConfig.graphRef = APOLLO_GRAPH_REF;
    }
    const graphId = input?.graphId ?? APOLLO_GRAPH_ID;
    const graphVariant = input?.graphVariant ?? APOLLO_GRAPH_VARIANT;
    if (apolloConfig.graphRef) {
        if (graphId) {
            throw new Error('Cannot specify both graph ref and graph ID. Please use ' +
                '`apollo.graphRef` or `APOLLO_GRAPH_REF` without also setting the graph ID.');
        }
        if (graphVariant) {
            throw new Error('Cannot specify both graph ref and graph variant. Please use ' +
                '`apollo.graphRef` or `APOLLO_GRAPH_REF` without also setting the graph variant.');
        }
    }
    else if (graphId) {
        apolloConfig.graphRef = graphVariant
            ? `${graphId}@${graphVariant}`
            : graphId;
    }
    return apolloConfig;
}
//# sourceMappingURL=determineApolloConfig.js.map